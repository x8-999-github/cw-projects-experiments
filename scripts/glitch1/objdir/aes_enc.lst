   1               		.file	"aes_enc.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	aes_shiftcol
  14               	aes_shiftcol:
  15               	.LFB1:
  16               		.file 1 ".././crypto/avrcryptolib//aes/aes_enc.c"
   1:.././crypto/avrcryptolib//aes/aes_enc.c **** /* aes_enc.c */
   2:.././crypto/avrcryptolib//aes/aes_enc.c **** /*
   3:.././crypto/avrcryptolib//aes/aes_enc.c ****     This file is part of the AVR-Crypto-Lib.
   4:.././crypto/avrcryptolib//aes/aes_enc.c ****     Copyright (C) 2008  Daniel Otte (daniel.otte@rub.de)
   5:.././crypto/avrcryptolib//aes/aes_enc.c **** 
   6:.././crypto/avrcryptolib//aes/aes_enc.c ****     This program is free software: you can redistribute it and/or modify
   7:.././crypto/avrcryptolib//aes/aes_enc.c ****     it under the terms of the GNU General Public License as published by
   8:.././crypto/avrcryptolib//aes/aes_enc.c ****     the Free Software Foundation, either version 3 of the License, or
   9:.././crypto/avrcryptolib//aes/aes_enc.c ****     (at your option) any later version.
  10:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  11:.././crypto/avrcryptolib//aes/aes_enc.c ****     This program is distributed in the hope that it will be useful,
  12:.././crypto/avrcryptolib//aes/aes_enc.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:.././crypto/avrcryptolib//aes/aes_enc.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:.././crypto/avrcryptolib//aes/aes_enc.c ****     GNU General Public License for more details.
  15:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  16:.././crypto/avrcryptolib//aes/aes_enc.c ****     You should have received a copy of the GNU General Public License
  17:.././crypto/avrcryptolib//aes/aes_enc.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:.././crypto/avrcryptolib//aes/aes_enc.c **** */
  19:.././crypto/avrcryptolib//aes/aes_enc.c **** /**
  20:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \file     aes_enc.c
  21:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \email    daniel.otte@rub.de
  22:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \author   Daniel Otte 
  23:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \date     2008-12-30
  24:.././crypto/avrcryptolib//aes/aes_enc.c ****  * \license  GPLv3 or later
  25:.././crypto/avrcryptolib//aes/aes_enc.c ****  * 
  26:.././crypto/avrcryptolib//aes/aes_enc.c ****  */
  27:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  28:.././crypto/avrcryptolib//aes/aes_enc.c **** #include <stdint.h>
  29:.././crypto/avrcryptolib//aes/aes_enc.c **** #include <string.h>
  30:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "aes.h"
  31:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "gf256mul.h"
  32:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "aes_sbox.h"
  33:.././crypto/avrcryptolib//aes/aes_enc.c **** #include "aes_enc.h"
  34:.././crypto/avrcryptolib//aes/aes_enc.c **** #include <avr/pgmspace.h>
  35:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  36:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_shiftcol(void* data, uint8_t shift){
  17               		.loc 1 36 0
  18               		.cfi_startproc
  19               	.LVL0:
  20 0000 CF93      		push r28
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 4
  23               		.cfi_offset 28, -3
  24 0002 DF93      		push r29
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 29, -4
  28 0004 00D0      		rcall .
  29 0006 1F92      		push __zero_reg__
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 9
  32 0008 CDB7      		in r28,__SP_L__
  33 000a DEB7      		in r29,__SP_H__
  34               	.LCFI3:
  35               		.cfi_def_cfa_register 28
  36               	/* prologue: function */
  37               	/* frame size = 4 */
  38               	/* stack size = 6 */
  39               	.L__stack_usage = 6
  40 000c DC01      		movw r26,r24
  37:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t tmp[4];
  38:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[0] = ((uint8_t*)data)[ 0];
  41               		.loc 1 38 0
  42 000e 8C91      		ld r24,X
  43               	.LVL1:
  44 0010 8983      		std Y+1,r24
  39:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[1] = ((uint8_t*)data)[ 4];
  45               		.loc 1 39 0
  46 0012 1496      		adiw r26,4
  47 0014 8C91      		ld r24,X
  48 0016 1497      		sbiw r26,4
  49 0018 8A83      		std Y+2,r24
  40:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[2] = ((uint8_t*)data)[ 8];
  50               		.loc 1 40 0
  51 001a 1896      		adiw r26,8
  52 001c 8C91      		ld r24,X
  53 001e 1897      		sbiw r26,8
  54 0020 8B83      		std Y+3,r24
  41:.././crypto/avrcryptolib//aes/aes_enc.c **** 	tmp[3] = ((uint8_t*)data)[12];
  55               		.loc 1 41 0
  56 0022 1C96      		adiw r26,12
  57 0024 8C91      		ld r24,X
  58 0026 1C97      		sbiw r26,12
  59 0028 8C83      		std Y+4,r24
  42:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[ 0] = tmp[(shift+0)&3];
  60               		.loc 1 42 0
  61 002a 862F      		mov r24,r22
  62 002c 8370      		andi r24,lo8(3)
  63 002e E1E0      		ldi r30,lo8(1)
  64 0030 F0E0      		ldi r31,0
  65 0032 EC0F      		add r30,r28
  66 0034 FD1F      		adc r31,r29
  67 0036 E80F      		add r30,r24
  68 0038 F11D      		adc r31,__zero_reg__
  69 003a 8081      		ld r24,Z
  70 003c 8C93      		st X,r24
  43:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[ 4] = tmp[(shift+1)&3];
  71               		.loc 1 43 0
  72 003e 70E0      		ldi r23,0
  73 0040 FB01      		movw r30,r22
  74 0042 3196      		adiw r30,1
  75 0044 E370      		andi r30,3
  76 0046 FF27      		clr r31
  77 0048 81E0      		ldi r24,lo8(1)
  78 004a 90E0      		ldi r25,0
  79 004c 8C0F      		add r24,r28
  80 004e 9D1F      		adc r25,r29
  81 0050 E80F      		add r30,r24
  82 0052 F91F      		adc r31,r25
  83 0054 8081      		ld r24,Z
  84 0056 1496      		adiw r26,4
  85 0058 8C93      		st X,r24
  86 005a 1497      		sbiw r26,4
  44:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[ 8] = tmp[(shift+2)&3];
  87               		.loc 1 44 0
  88 005c FB01      		movw r30,r22
  89 005e 3296      		adiw r30,2
  90 0060 E370      		andi r30,3
  91 0062 FF27      		clr r31
  92 0064 81E0      		ldi r24,lo8(1)
  93 0066 90E0      		ldi r25,0
  94 0068 8C0F      		add r24,r28
  95 006a 9D1F      		adc r25,r29
  96 006c E80F      		add r30,r24
  97 006e F91F      		adc r31,r25
  98 0070 8081      		ld r24,Z
  99 0072 1896      		adiw r26,8
 100 0074 8C93      		st X,r24
 101 0076 1897      		sbiw r26,8
  45:.././crypto/avrcryptolib//aes/aes_enc.c **** 	((uint8_t*)data)[12] = tmp[(shift+3)&3];
 102               		.loc 1 45 0
 103 0078 FB01      		movw r30,r22
 104 007a 3396      		adiw r30,3
 105 007c E370      		andi r30,3
 106 007e FF27      		clr r31
 107 0080 81E0      		ldi r24,lo8(1)
 108 0082 90E0      		ldi r25,0
 109 0084 8C0F      		add r24,r28
 110 0086 9D1F      		adc r25,r29
 111 0088 E80F      		add r30,r24
 112 008a F91F      		adc r31,r25
 113 008c 8081      		ld r24,Z
 114 008e 1C96      		adiw r26,12
 115 0090 8C93      		st X,r24
 116               	/* epilogue start */
  46:.././crypto/avrcryptolib//aes/aes_enc.c **** }
 117               		.loc 1 46 0
 118 0092 2496      		adiw r28,4
 119 0094 CDBF      		out __SP_L__,r28
 120 0096 DEBF      		out __SP_H__,r29
 121 0098 DF91      		pop r29
 122 009a CF91      		pop r28
 123 009c 0895      		ret
 124               		.cfi_endproc
 125               	.LFE1:
 127               	.global	aes_encrypt_core
 129               	aes_encrypt_core:
 130               	.LFB4:
  47:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  48:.././crypto/avrcryptolib//aes/aes_enc.c **** #define GF256MUL_1(a) (a)
  49:.././crypto/avrcryptolib//aes/aes_enc.c **** #define GF256MUL_2(a) (gf256mul(2, (a), 0x1b))
  50:.././crypto/avrcryptolib//aes/aes_enc.c **** #define GF256MUL_3(a) (gf256mul(3, (a), 0x1b))
  51:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  52:.././crypto/avrcryptolib//aes/aes_enc.c **** static
  53:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_enc_round(aes_cipher_state_t* state, const aes_roundkey_t* k){
  54:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t tmp[16], t;
  55:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t i;
  56:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* subBytes */
  57:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
  58:.././crypto/avrcryptolib//aes/aes_enc.c **** 		tmp[i] = pgm_read_byte(aes_sbox+state->s[i]);
  59:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  60:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* shiftRows */
  61:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+1, 1);
  62:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+2, 2);
  63:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+3, 3);
  64:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* mixColums */
  65:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<4; ++i){
  66:.././crypto/avrcryptolib//aes/aes_enc.c **** 		t = tmp[4*i+0] ^ tmp[4*i+1] ^ tmp[4*i+2] ^ tmp[4*i+3];
  67:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+0] =
  68:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+0]^tmp[4*i+1])
  69:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+0]
  70:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  71:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+1] =
  72:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+1]^tmp[4*i+2])
  73:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+1]
  74:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  75:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+2] =
  76:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+2]^tmp[4*i+3])
  77:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+2]
  78:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  79:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+3] =
  80:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+3]^tmp[4*i+0])
  81:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+3]
  82:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ t;
  83:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  84:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  85:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* addKey */
  86:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
  87:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
  88:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  89:.././crypto/avrcryptolib//aes/aes_enc.c **** }
  90:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  91:.././crypto/avrcryptolib//aes/aes_enc.c **** 
  92:.././crypto/avrcryptolib//aes/aes_enc.c **** static
  93:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_enc_lastround(aes_cipher_state_t* state,const aes_roundkey_t* k){
  94:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t i;
  95:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* subBytes */
  96:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
  97:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] = pgm_read_byte(aes_sbox+state->s[i]);
  98:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
  99:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* shiftRows */
 100:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+1, 1);
 101:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+2, 2);
 102:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+3, 3);
 103:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* keyAdd */
 104:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
 105:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
 106:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 107:.././crypto/avrcryptolib//aes/aes_enc.c **** }
 108:.././crypto/avrcryptolib//aes/aes_enc.c **** 
 109:.././crypto/avrcryptolib//aes/aes_enc.c **** void aes_encrypt_core(aes_cipher_state_t* state, const aes_genctx_t* ks, uint8_t rounds){
 131               		.loc 1 109 0
 132               		.cfi_startproc
 133               	.LVL2:
 134 009e 2F92      		push r2
 135               	.LCFI4:
 136               		.cfi_def_cfa_offset 4
 137               		.cfi_offset 2, -3
 138 00a0 3F92      		push r3
 139               	.LCFI5:
 140               		.cfi_def_cfa_offset 5
 141               		.cfi_offset 3, -4
 142 00a2 4F92      		push r4
 143               	.LCFI6:
 144               		.cfi_def_cfa_offset 6
 145               		.cfi_offset 4, -5
 146 00a4 5F92      		push r5
 147               	.LCFI7:
 148               		.cfi_def_cfa_offset 7
 149               		.cfi_offset 5, -6
 150 00a6 6F92      		push r6
 151               	.LCFI8:
 152               		.cfi_def_cfa_offset 8
 153               		.cfi_offset 6, -7
 154 00a8 7F92      		push r7
 155               	.LCFI9:
 156               		.cfi_def_cfa_offset 9
 157               		.cfi_offset 7, -8
 158 00aa 8F92      		push r8
 159               	.LCFI10:
 160               		.cfi_def_cfa_offset 10
 161               		.cfi_offset 8, -9
 162 00ac 9F92      		push r9
 163               	.LCFI11:
 164               		.cfi_def_cfa_offset 11
 165               		.cfi_offset 9, -10
 166 00ae AF92      		push r10
 167               	.LCFI12:
 168               		.cfi_def_cfa_offset 12
 169               		.cfi_offset 10, -11
 170 00b0 BF92      		push r11
 171               	.LCFI13:
 172               		.cfi_def_cfa_offset 13
 173               		.cfi_offset 11, -12
 174 00b2 CF92      		push r12
 175               	.LCFI14:
 176               		.cfi_def_cfa_offset 14
 177               		.cfi_offset 12, -13
 178 00b4 DF92      		push r13
 179               	.LCFI15:
 180               		.cfi_def_cfa_offset 15
 181               		.cfi_offset 13, -14
 182 00b6 EF92      		push r14
 183               	.LCFI16:
 184               		.cfi_def_cfa_offset 16
 185               		.cfi_offset 14, -15
 186 00b8 FF92      		push r15
 187               	.LCFI17:
 188               		.cfi_def_cfa_offset 17
 189               		.cfi_offset 15, -16
 190 00ba 0F93      		push r16
 191               	.LCFI18:
 192               		.cfi_def_cfa_offset 18
 193               		.cfi_offset 16, -17
 194 00bc 1F93      		push r17
 195               	.LCFI19:
 196               		.cfi_def_cfa_offset 19
 197               		.cfi_offset 17, -18
 198 00be CF93      		push r28
 199               	.LCFI20:
 200               		.cfi_def_cfa_offset 20
 201               		.cfi_offset 28, -19
 202 00c0 DF93      		push r29
 203               	.LCFI21:
 204               		.cfi_def_cfa_offset 21
 205               		.cfi_offset 29, -20
 206 00c2 CDB7      		in r28,__SP_L__
 207 00c4 DEB7      		in r29,__SP_H__
 208               	.LCFI22:
 209               		.cfi_def_cfa_register 28
 210 00c6 6E97      		sbiw r28,30
 211               	.LCFI23:
 212               		.cfi_def_cfa_offset 51
 213 00c8 CDBF      		out __SP_L__,r28
 214 00ca DEBF      		out __SP_H__,r29
 215               	/* prologue: function */
 216               	/* frame size = 30 */
 217               	/* stack size = 48 */
 218               	.L__stack_usage = 48
 219 00cc 2C01      		movw r4,r24
 220 00ce 3B01      		movw r6,r22
 221 00d0 542F      		mov r21,r20
 222               	.LVL3:
 223 00d2 DB01      		movw r26,r22
 224 00d4 8D8B      		std Y+21,r24
 225 00d6 9E8B      		std Y+22,r25
 226 00d8 4096      		adiw r24,16
 227               	.LVL4:
 228 00da 8F8B      		std Y+23,r24
 229 00dc 988F      		std Y+24,r25
 230               		.loc 1 109 0
 231 00de F201      		movw r30,r4
 232               	.LVL5:
 233               	.L3:
 110:.././crypto/avrcryptolib//aes/aes_enc.c **** 	uint8_t i;
 111:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(i=0; i<16; ++i){
 112:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= ks->key[0].ks[i];
 234               		.loc 1 112 0 discriminator 3
 235 00e0 8D91      		ld r24,X+
 236 00e2 9081      		ld r25,Z
 237 00e4 8927      		eor r24,r25
 238 00e6 8193      		st Z+,r24
 239               	.LVL6:
 111:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= ks->key[0].ks[i];
 240               		.loc 1 111 0 discriminator 3
 241 00e8 8F89      		ldd r24,Y+23
 242 00ea 988D      		ldd r25,Y+24
 243 00ec E817      		cp r30,r24
 244 00ee F907      		cpc r31,r25
 245 00f0 01F4      		brne .L3
 246 00f2 9301      		movw r18,r6
 247 00f4 205F      		subi r18,-16
 248 00f6 3F4F      		sbci r19,-1
 111:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= ks->key[0].ks[i];
 249               		.loc 1 111 0 is_stmt 0
 250 00f8 2224      		clr r2
 251 00fa 2394      		inc r2
 252 00fc DE01      		movw r26,r28
 253 00fe 1196      		adiw r26,1
 254 0100 A98B      		std Y+17,r26
 255 0102 BA8B      		std Y+18,r27
 256 0104 A05F      		subi r26,lo8(-(16))
 257 0106 A98F      		std Y+25,r26
 258 0108 F201      		movw r30,r4
 259               	.LVL7:
 260 010a 3396      		adiw r30,3
 261 010c EA8F      		std Y+26,r30
 262 010e FB8F      		std Y+27,r31
 263 0110 CE01      		movw r24,r28
 264 0112 4196      		adiw r24,17
 265 0114 8B8B      		std Y+19,r24
 266 0116 9C8B      		std Y+20,r25
 267               	.LVL8:
 268               	.L4:
 113:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 114:.././crypto/avrcryptolib//aes/aes_enc.c **** 	i=1;
 115:.././crypto/avrcryptolib//aes/aes_enc.c **** 	for(;rounds>1;--rounds){
 269               		.loc 1 115 0 is_stmt 1 discriminator 1
 270 0118 5230      		cpi r21,lo8(2)
 271 011a 00F4      		brsh .+2
 272 011c 00C0      		rjmp .L18
 273               	.LVL9:
 274 011e 8E01      		movw r16,r28
 275 0120 0F5F      		subi r16,-1
 276 0122 1F4F      		sbci r17,-1
 277               		.loc 1 115 0 is_stmt 0 discriminator 2
 278 0124 D801      		movw r26,r16
 279 0126 C201      		movw r24,r4
 280               	.LVL10:
 281               	.L5:
 282               	.LBB8:
 283               	.LBB9:
 284               	.LBB10:
  58:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 285               		.loc 1 58 0 is_stmt 1
 286 0128 FC01      		movw r30,r24
 287 012a 4191      		ld r20,Z+
 288 012c CF01      		movw r24,r30
 289               	.LVL11:
 290 012e E42F      		mov r30,r20
 291 0130 F0E0      		ldi r31,0
 292 0132 E050      		subi r30,lo8(-(aes_sbox))
 293 0134 F040      		sbci r31,hi8(-(aes_sbox))
 294               	/* #APP */
 295               	 ;  58 ".././crypto/avrcryptolib//aes/aes_enc.c" 1
 296 0136 E491      		lpm r30, Z
 297               		
 298               	 ;  0 "" 2
 299               	.LVL12:
 300               	/* #NOAPP */
 301               	.LBE10:
 302 0138 ED93      		st X+,r30
 303               	.LVL13:
  57:.././crypto/avrcryptolib//aes/aes_enc.c **** 		tmp[i] = pgm_read_byte(aes_sbox+state->s[i]);
 304               		.loc 1 57 0
 305 013a F98D      		ldd r31,Y+25
 306 013c FA13      		cpse r31,r26
 307 013e 00C0      		rjmp .L5
  61:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+2, 2);
 308               		.loc 1 61 0
 309 0140 61E0      		ldi r22,lo8(1)
 310 0142 CE01      		movw r24,r28
 311               	.LVL14:
 312 0144 0296      		adiw r24,2
 313 0146 2C8F      		std Y+28,r18
 314 0148 3D8F      		std Y+29,r19
 315 014a 5E8F      		std Y+30,r21
 316 014c 0E94 0000 		call aes_shiftcol
 317               	.LVL15:
  62:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(tmp+3, 3);
 318               		.loc 1 62 0
 319 0150 62E0      		ldi r22,lo8(2)
 320 0152 CE01      		movw r24,r28
 321 0154 0396      		adiw r24,3
 322 0156 0E94 0000 		call aes_shiftcol
 323               	.LVL16:
  63:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* mixColums */
 324               		.loc 1 63 0
 325 015a 63E0      		ldi r22,lo8(3)
 326 015c CE01      		movw r24,r28
 327 015e 0496      		adiw r24,4
 328 0160 0E94 0000 		call aes_shiftcol
 329               	.LVL17:
 330 0164 CE01      		movw r24,r28
 331 0166 0296      		adiw r24,2
 332 0168 4C01      		movw r8,r24
 333 016a DE01      		movw r26,r28
 334 016c 1396      		adiw r26,3
 335 016e 5D01      		movw r10,r26
 336 0170 FE01      		movw r30,r28
 337 0172 3496      		adiw r30,4
 338 0174 6F01      		movw r12,r30
 339 0176 EA8C      		ldd r14,Y+26
 340 0178 FB8C      		ldd r15,Y+27
 341 017a 5E8D      		ldd r21,Y+30
 342 017c 3D8D      		ldd r19,Y+29
 343 017e 2C8D      		ldd r18,Y+28
 344               	.LVL18:
 345               	.L6:
  66:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[4*i+0] =
 346               		.loc 1 66 0
 347 0180 D401      		movw r26,r8
 348 0182 6C91      		ld r22,X
 349 0184 F801      		movw r30,r16
 350 0186 8081      		ld r24,Z
 351 0188 6827      		eor r22,r24
 352 018a D601      		movw r26,r12
 353 018c 3C90      		ld r3,X
 354 018e F501      		movw r30,r10
 355 0190 8081      		ld r24,Z
 356 0192 3826      		eor r3,r24
 357 0194 3626      		eor r3,r22
 358               	.LVL19:
  68:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+0]
 359               		.loc 1 68 0
 360 0196 4BE1      		ldi r20,lo8(27)
 361 0198 82E0      		ldi r24,lo8(2)
 362 019a 2C8F      		std Y+28,r18
 363 019c 3D8F      		std Y+29,r19
 364 019e 5E8F      		std Y+30,r21
 365 01a0 0E94 0000 		call gf256mul
 366               	.LVL20:
 367 01a4 F701      		movw r30,r14
 368 01a6 3397      		sbiw r30,3
  67:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+0]^tmp[4*i+1])
 369               		.loc 1 67 0
 370 01a8 D801      		movw r26,r16
 371 01aa 9C91      		ld r25,X
 372 01ac 8927      		eor r24,r25
 373 01ae 8325      		eor r24,r3
 374 01b0 8083      		st Z,r24
  72:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+1]
 375               		.loc 1 72 0
 376 01b2 F501      		movw r30,r10
 377 01b4 6081      		ld r22,Z
 378 01b6 D401      		movw r26,r8
 379 01b8 8C91      		ld r24,X
 380 01ba 6827      		eor r22,r24
 381 01bc 4BE1      		ldi r20,lo8(27)
 382 01be 82E0      		ldi r24,lo8(2)
 383 01c0 0E94 0000 		call gf256mul
 384               	.LVL21:
 385 01c4 F701      		movw r30,r14
 386 01c6 3297      		sbiw r30,2
  71:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+1]^tmp[4*i+2])
 387               		.loc 1 71 0
 388 01c8 D401      		movw r26,r8
 389 01ca 9C91      		ld r25,X
 390 01cc 8927      		eor r24,r25
 391 01ce 8325      		eor r24,r3
 392 01d0 8083      		st Z,r24
  76:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+2]
 393               		.loc 1 76 0
 394 01d2 F601      		movw r30,r12
 395 01d4 6081      		ld r22,Z
 396 01d6 D501      		movw r26,r10
 397 01d8 8C91      		ld r24,X
 398 01da 6827      		eor r22,r24
 399 01dc 4BE1      		ldi r20,lo8(27)
 400 01de 82E0      		ldi r24,lo8(2)
 401 01e0 0E94 0000 		call gf256mul
 402               	.LVL22:
 403 01e4 F701      		movw r30,r14
 404 01e6 3197      		sbiw r30,1
  75:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+2]^tmp[4*i+3])
 405               		.loc 1 75 0
 406 01e8 D501      		movw r26,r10
 407 01ea 9C91      		ld r25,X
 408 01ec 8927      		eor r24,r25
 409 01ee 8325      		eor r24,r3
 410 01f0 8083      		st Z,r24
  80:.././crypto/avrcryptolib//aes/aes_enc.c **** 			^ tmp[4*i+3]
 411               		.loc 1 80 0
 412 01f2 F801      		movw r30,r16
 413 01f4 6081      		ld r22,Z
 414 01f6 D601      		movw r26,r12
 415 01f8 8C91      		ld r24,X
 416 01fa 6827      		eor r22,r24
 417 01fc 4BE1      		ldi r20,lo8(27)
 418 01fe 82E0      		ldi r24,lo8(2)
 419 0200 0E94 0000 		call gf256mul
 420               	.LVL23:
  79:.././crypto/avrcryptolib//aes/aes_enc.c **** 			  GF256MUL_2(tmp[4*i+3]^tmp[4*i+0])
 421               		.loc 1 79 0
 422 0204 F601      		movw r30,r12
 423 0206 9081      		ld r25,Z
 424 0208 8927      		eor r24,r25
 425 020a 3826      		eor r3,r24
 426               	.LVL24:
 427 020c D701      		movw r26,r14
 428 020e 3C92      		st X,r3
 429 0210 0C5F      		subi r16,-4
 430 0212 1F4F      		sbci r17,-1
 431 0214 B4E0      		ldi r27,4
 432 0216 8B0E      		add r8,r27
 433 0218 911C      		adc r9,__zero_reg__
 434 021a E4E0      		ldi r30,4
 435 021c AE0E      		add r10,r30
 436 021e B11C      		adc r11,__zero_reg__
 437 0220 F4E0      		ldi r31,4
 438 0222 CF0E      		add r12,r31
 439 0224 D11C      		adc r13,__zero_reg__
 440 0226 44E0      		ldi r20,4
 441 0228 E40E      		add r14,r20
 442 022a F11C      		adc r15,__zero_reg__
  65:.././crypto/avrcryptolib//aes/aes_enc.c **** 		t = tmp[4*i+0] ^ tmp[4*i+1] ^ tmp[4*i+2] ^ tmp[4*i+3];
 443               		.loc 1 65 0
 444 022c 2C8D      		ldd r18,Y+28
 445 022e 3D8D      		ldd r19,Y+29
 446 0230 5E8D      		ldd r21,Y+30
 447 0232 8B89      		ldd r24,Y+19
 448 0234 9C89      		ldd r25,Y+20
 449 0236 0817      		cp r16,r24
 450 0238 1907      		cpc r17,r25
 451 023a 01F0      		breq .+2
 452 023c 00C0      		rjmp .L6
 453 023e F201      		movw r30,r4
 454 0240 80E0      		ldi r24,0
 455 0242 90E0      		ldi r25,0
 456               	.L7:
 457               	.LVL25:
 458 0244 D901      		movw r26,r18
 459 0246 A80F      		add r26,r24
 460 0248 B91F      		adc r27,r25
  87:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 461               		.loc 1 87 0
 462 024a 6081      		ld r22,Z
 463 024c 4C91      		ld r20,X
 464 024e 4627      		eor r20,r22
 465 0250 4193      		st Z+,r20
 466               	.LVL26:
 467 0252 0196      		adiw r24,1
 468               	.LVL27:
  86:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
 469               		.loc 1 86 0
 470 0254 8031      		cpi r24,16
 471 0256 9105      		cpc r25,__zero_reg__
 472 0258 01F4      		brne .L7
 473               	.LBE9:
 474               	.LBE8:
 116:.././crypto/avrcryptolib//aes/aes_enc.c **** 		aes_enc_round(state, &(ks->key[i]));
 117:.././crypto/avrcryptolib//aes/aes_enc.c **** 		++i;
 475               		.loc 1 117 0 discriminator 2
 476 025a 2394      		inc r2
 477               	.LVL28:
 115:.././crypto/avrcryptolib//aes/aes_enc.c **** 		aes_enc_round(state, &(ks->key[i]));
 478               		.loc 1 115 0 discriminator 2
 479 025c 5150      		subi r21,lo8(-(-1))
 480               	.LVL29:
 481 025e 205F      		subi r18,-16
 482 0260 3F4F      		sbci r19,-1
 483 0262 00C0      		rjmp .L4
 484               	.LVL30:
 485               	.L18:
 115:.././crypto/avrcryptolib//aes/aes_enc.c **** 		aes_enc_round(state, &(ks->key[i]));
 486               		.loc 1 115 0 is_stmt 0
 487 0264 D201      		movw r26,r4
 488               	.LVL31:
 489               	.L9:
 490               	.LBB11:
 491               	.LBB12:
 492               	.LBB13:
  97:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 493               		.loc 1 97 0 is_stmt 1
 494 0266 EC91      		ld r30,X
 495 0268 F0E0      		ldi r31,0
 496 026a E050      		subi r30,lo8(-(aes_sbox))
 497 026c F040      		sbci r31,hi8(-(aes_sbox))
 498               	/* #APP */
 499               	 ;  97 ".././crypto/avrcryptolib//aes/aes_enc.c" 1
 500 026e E491      		lpm r30, Z
 501               		
 502               	 ;  0 "" 2
 503               	.LVL32:
 504               	/* #NOAPP */
 505               	.LBE13:
 506 0270 ED93      		st X+,r30
 507               	.LVL33:
  96:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] = pgm_read_byte(aes_sbox+state->s[i]);
 508               		.loc 1 96 0
 509 0272 EF89      		ldd r30,Y+23
 510 0274 F88D      		ldd r31,Y+24
 511               	.LVL34:
 512 0276 AE17      		cp r26,r30
 513 0278 BF07      		cpc r27,r31
 514 027a 01F4      		brne .L9
 100:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+2, 2);
 515               		.loc 1 100 0
 516 027c 61E0      		ldi r22,lo8(1)
 517 027e C201      		movw r24,r4
 518 0280 0196      		adiw r24,1
 519 0282 0E94 0000 		call aes_shiftcol
 520               	.LVL35:
 101:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_shiftcol(state->s+3, 3);
 521               		.loc 1 101 0
 522 0286 62E0      		ldi r22,lo8(2)
 523 0288 C201      		movw r24,r4
 524 028a 0296      		adiw r24,2
 525 028c 0E94 0000 		call aes_shiftcol
 526               	.LVL36:
 102:.././crypto/avrcryptolib//aes/aes_enc.c **** 	/* keyAdd */
 527               		.loc 1 102 0
 528 0290 63E0      		ldi r22,lo8(3)
 529 0292 C201      		movw r24,r4
 530 0294 0396      		adiw r24,3
 531 0296 0E94 0000 		call aes_shiftcol
 532               	.LVL37:
 533 029a F0E1      		ldi r31,lo8(16)
 534 029c 2F9E      		mul r2,r31
 535 029e 1001      		movw r2,r0
 536 02a0 1124      		clr __zero_reg__
 537               	.LVL38:
 538 02a2 80E0      		ldi r24,0
 539 02a4 90E0      		ldi r25,0
 540               	.LVL39:
 541               	.L10:
 542 02a6 FC01      		movw r30,r24
 543 02a8 E20D      		add r30,r2
 544 02aa F31D      		adc r31,r3
 545 02ac E60D      		add r30,r6
 546 02ae F71D      		adc r31,r7
 105:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 547               		.loc 1 105 0
 548 02b0 AD89      		ldd r26,Y+21
 549 02b2 BE89      		ldd r27,Y+22
 550 02b4 3C91      		ld r19,X
 551 02b6 2081      		ld r18,Z
 552 02b8 2327      		eor r18,r19
 553 02ba 2D93      		st X+,r18
 554 02bc AD8B      		std Y+21,r26
 555 02be BE8B      		std Y+22,r27
 556               	.LVL40:
 557 02c0 0196      		adiw r24,1
 558               	.LVL41:
 104:.././crypto/avrcryptolib//aes/aes_enc.c **** 		state->s[i] ^= k->ks[i];
 559               		.loc 1 104 0
 560 02c2 8031      		cpi r24,16
 561 02c4 9105      		cpc r25,__zero_reg__
 562 02c6 01F4      		brne .L10
 563               	/* epilogue start */
 564               	.LBE12:
 565               	.LBE11:
 118:.././crypto/avrcryptolib//aes/aes_enc.c **** 	}
 119:.././crypto/avrcryptolib//aes/aes_enc.c **** 	aes_enc_lastround(state, &(ks->key[i]));
 120:.././crypto/avrcryptolib//aes/aes_enc.c **** }
 566               		.loc 1 120 0
 567 02c8 6E96      		adiw r28,30
 568 02ca CDBF      		out __SP_L__,r28
 569 02cc DEBF      		out __SP_H__,r29
 570 02ce DF91      		pop r29
 571 02d0 CF91      		pop r28
 572 02d2 1F91      		pop r17
 573 02d4 0F91      		pop r16
 574 02d6 FF90      		pop r15
 575 02d8 EF90      		pop r14
 576 02da DF90      		pop r13
 577 02dc CF90      		pop r12
 578 02de BF90      		pop r11
 579 02e0 AF90      		pop r10
 580 02e2 9F90      		pop r9
 581 02e4 8F90      		pop r8
 582 02e6 7F90      		pop r7
 583 02e8 6F90      		pop r6
 584               	.LVL42:
 585 02ea 5F90      		pop r5
 586 02ec 4F90      		pop r4
 587               	.LVL43:
 588 02ee 3F90      		pop r3
 589 02f0 2F90      		pop r2
 590 02f2 0895      		ret
 591               		.cfi_endproc
 592               	.LFE4:
 594               	.Letext0:
 595               		.file 2 "/usr/lib/avr/include/stdint.h"
 596               		.file 3 ".././crypto/avrcryptolib//aes/aes_types.h"
 597               		.file 4 ".././crypto/avrcryptolib//aes/aes_sbox.h"
 598               		.file 5 ".././crypto/avrcryptolib//gf256mul/gf256mul.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes_enc.c
     /tmp/ccvLe3Wl.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccvLe3Wl.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccvLe3Wl.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccvLe3Wl.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccvLe3Wl.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccvLe3Wl.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccvLe3Wl.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccvLe3Wl.s:14     .text:0000000000000000 aes_shiftcol
     /tmp/ccvLe3Wl.s:129    .text:000000000000009e aes_encrypt_core

UNDEFINED SYMBOLS
aes_sbox
gf256mul
