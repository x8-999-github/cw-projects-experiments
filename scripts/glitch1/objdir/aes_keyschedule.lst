   1               		.file	"aes_keyschedule.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	aes_init
  14               	aes_init:
  15               	.LFB2:
  16               		.file 1 ".././crypto/avrcryptolib//aes/aes_keyschedule.c"
   1:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** /* aes_keyschedule.c */
   2:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** /*
   3:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     This file is part of the AVR-Crypto-Lib.
   4:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     Copyright (C) 2008, 2009  Daniel Otte (daniel.otte@rub.de)
   5:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
   6:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     This program is free software: you can redistribute it and/or modify
   7:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     it under the terms of the GNU General Public License as published by
   8:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     the Free Software Foundation, either version 3 of the License, or
   9:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     (at your option) any later version.
  10:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  11:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     This program is distributed in the hope that it will be useful,
  12:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     GNU General Public License for more details.
  15:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  16:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     You should have received a copy of the GNU General Public License
  17:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** */
  19:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** /**
  20:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****  * \file     aes_keyschedule.c
  21:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****  * \email    daniel.otte@rub.de
  22:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****  * \author   Daniel Otte
  23:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****  * \date     2008-12-30
  24:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****  * \license  GPLv3 or later
  25:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****  *
  26:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****  */
  27:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  28:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** #include <stdint.h>
  29:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** #include "aes.h"
  30:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** #include "aes_keyschedule.h"
  31:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** #include "aes_sbox.h"
  32:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** #include <string.h>
  33:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** #include <avr/pgmspace.h>
  34:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  35:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** static
  36:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** void aes_rotword(void* a){
  37:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	uint8_t t;
  38:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	t=((uint8_t*)a)[0];
  39:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	((uint8_t*)a)[0] = ((uint8_t*)a)[1];
  40:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	((uint8_t*)a)[1] = ((uint8_t*)a)[2];
  41:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	((uint8_t*)a)[2] = ((uint8_t*)a)[3];
  42:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	((uint8_t*)a)[3] = t;
  43:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** }
  44:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  45:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** const uint8_t rc_tab[] PROGMEM = { 0x01, 0x02, 0x04, 0x08,
  46:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****                              0x10, 0x20, 0x40, 0x80,
  47:.././crypto/avrcryptolib//aes/aes_keyschedule.c ****                              0x1b, 0x36 };
  48:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  49:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** void aes_init(const void* key, uint16_t keysize_b, aes_genctx_t* ctx){
  17               		.loc 1 49 0
  18               		.cfi_startproc
  19               	.LVL0:
  20 0000 8F92      		push r8
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 4
  23               		.cfi_offset 8, -3
  24 0002 9F92      		push r9
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 9, -4
  28 0004 AF92      		push r10
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 6
  31               		.cfi_offset 10, -5
  32 0006 BF92      		push r11
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 7
  35               		.cfi_offset 11, -6
  36 0008 CF92      		push r12
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 8
  39               		.cfi_offset 12, -7
  40 000a DF92      		push r13
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 9
  43               		.cfi_offset 13, -8
  44 000c EF92      		push r14
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 10
  47               		.cfi_offset 14, -9
  48 000e FF92      		push r15
  49               	.LCFI7:
  50               		.cfi_def_cfa_offset 11
  51               		.cfi_offset 15, -10
  52 0010 0F93      		push r16
  53               	.LCFI8:
  54               		.cfi_def_cfa_offset 12
  55               		.cfi_offset 16, -11
  56 0012 1F93      		push r17
  57               	.LCFI9:
  58               		.cfi_def_cfa_offset 13
  59               		.cfi_offset 17, -12
  60 0014 CF93      		push r28
  61               	.LCFI10:
  62               		.cfi_def_cfa_offset 14
  63               		.cfi_offset 28, -13
  64 0016 DF93      		push r29
  65               	.LCFI11:
  66               		.cfi_def_cfa_offset 15
  67               		.cfi_offset 29, -14
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 12 */
  71               	.L__stack_usage = 12
  72 0018 EA01      		movw r28,r20
  73               	.LVL1:
  50:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	uint8_t hi,i,nk, next_nk;
  51:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	uint8_t rc=0;
  52:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	union {
  53:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		uint32_t v32;
  54:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		uint8_t  v8[4];
  55:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	} tmp;
  56:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	nk=keysize_b>>5; /* 4, 6, 8 */
  74               		.loc 1 56 0
  75 001a 8B01      		movw r16,r22
  76 001c E5E0      		ldi r30,5
  77               		1:
  78 001e 1695      		lsr r17
  79 0020 0795      		ror r16
  80 0022 EA95      		dec r30
  81 0024 01F4      		brne 1b
  82 0026 C02E      		mov r12,r16
  83               	.LVL2:
  84 0028 7801      		movw r14,r16
  85 002a FF24      		clr r15
  57:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	hi=4*(nk+6+1);
  86               		.loc 1 57 0
  87 002c 9701      		movw r18,r14
  88 002e 295F      		subi r18,-7
  89 0030 3F4F      		sbci r19,-1
  90 0032 D22E      		mov r13,r18
  91 0034 DD0C      		lsl r13
  92 0036 DD0C      		lsl r13
  93               	.LVL3:
  58:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	memcpy(ctx, key, keysize_b/8);
  94               		.loc 1 58 0
  95 0038 AB01      		movw r20,r22
  96               	.LVL4:
  97 003a F3E0      		ldi r31,3
  98               		1:
  99 003c 5695      		lsr r21
 100 003e 4795      		ror r20
 101 0040 FA95      		dec r31
 102 0042 01F4      		brne 1b
 103 0044 BC01      		movw r22,r24
 104               	.LVL5:
 105 0046 CE01      		movw r24,r28
 106               	.LVL6:
 107 0048 0E94 0000 		call memcpy
 108               	.LVL7:
  59:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	next_nk = nk;
 109               		.loc 1 59 0
 110 004c 602F      		mov r22,r16
  60:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	for(i=nk;i<hi;++i){
 111               		.loc 1 60 0
 112 004e 802F      		mov r24,r16
  51:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	union {
 113               		.loc 1 51 0
 114 0050 90E0      		ldi r25,0
 115               	.LVL8:
 116               	.L2:
 117               		.loc 1 60 0 discriminator 1
 118 0052 8D15      		cp r24,r13
 119 0054 00F0      		brlo .+2
 120 0056 00C0      		rjmp .L7
  61:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		tmp.v32 = ((uint32_t*)(ctx->key[0].ks))[i-1];
 121               		.loc 1 61 0
 122 0058 482F      		mov r20,r24
 123 005a 50E0      		ldi r21,0
 124 005c DA01      		movw r26,r20
 125 005e A150      		subi r26,1
 126 0060 B04C      		sbci r27,-64
 127 0062 AA0F      		lsl r26
 128 0064 BB1F      		rol r27
 129 0066 AA0F      		lsl r26
 130 0068 BB1F      		rol r27
 131 006a AC0F      		add r26,r28
 132 006c BD1F      		adc r27,r29
 133 006e 0D91      		ld r16,X+
 134 0070 1D91      		ld r17,X+
 135 0072 2D91      		ld r18,X+
 136 0074 3C91      		ld r19,X
 137 0076 1397      		sbiw r26,3
 138               	.LVL9:
  62:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		if(i!=next_nk){
 139               		.loc 1 62 0
 140 0078 8617      		cp r24,r22
 141 007a 01F0      		breq .L3
  63:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			if(nk==8 && i%8==4){
 142               		.loc 1 63 0
 143 007c 78E0      		ldi r23,lo8(8)
 144 007e C712      		cpse r12,r23
 145 0080 00C0      		rjmp .L4
 146               		.loc 1 63 0 is_stmt 0 discriminator 1
 147 0082 782F      		mov r23,r24
 148 0084 7770      		andi r23,lo8(7)
 149 0086 7430      		cpi r23,lo8(4)
 150 0088 01F0      		breq .+2
 151 008a 00C0      		rjmp .L4
 152               	.LVL10:
 153               	.LBB13:
  64:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 				tmp.v8[0] = pgm_read_byte(aes_sbox+tmp.v8[0]);
 154               		.loc 1 64 0 is_stmt 1
 155 008c E02F      		mov r30,r16
 156 008e F0E0      		ldi r31,0
 157 0090 E050      		subi r30,lo8(-(aes_sbox))
 158 0092 F040      		sbci r31,hi8(-(aes_sbox))
 159               	/* #APP */
 160               	 ;  64 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 161 0094 E491      		lpm r30, Z
 162               		
 163               	 ;  0 "" 2
 164               	.LVL11:
 165               	/* #NOAPP */
 166               	.LBE13:
 167 0096 0E2F      		mov r16,r30
 168               	.LVL12:
 169               	.LBB14:
  65:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 				tmp.v8[1] = pgm_read_byte(aes_sbox+tmp.v8[1]);
 170               		.loc 1 65 0
 171 0098 E12F      		mov r30,r17
 172               	.LVL13:
 173 009a F0E0      		ldi r31,0
 174 009c E050      		subi r30,lo8(-(aes_sbox))
 175 009e F040      		sbci r31,hi8(-(aes_sbox))
 176               	/* #APP */
 177               	 ;  65 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 178 00a0 E491      		lpm r30, Z
 179               		
 180               	 ;  0 "" 2
 181               	.LVL14:
 182               	/* #NOAPP */
 183               	.LBE14:
 184 00a2 1E2F      		mov r17,r30
 185               	.LVL15:
 186               	.LBB15:
  66:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 				tmp.v8[2] = pgm_read_byte(aes_sbox+tmp.v8[2]);
 187               		.loc 1 66 0
 188 00a4 E22F      		mov r30,r18
 189               	.LVL16:
 190 00a6 F0E0      		ldi r31,0
 191 00a8 E050      		subi r30,lo8(-(aes_sbox))
 192 00aa F040      		sbci r31,hi8(-(aes_sbox))
 193               	/* #APP */
 194               	 ;  66 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 195 00ac E491      		lpm r30, Z
 196               		
 197               	 ;  0 "" 2
 198               	.LVL17:
 199               	/* #NOAPP */
 200               	.LBE15:
 201 00ae 2E2F      		mov r18,r30
 202               	.LVL18:
 203               	.LBB16:
  67:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 				tmp.v8[3] = pgm_read_byte(aes_sbox+tmp.v8[3]);
 204               		.loc 1 67 0
 205 00b0 E32F      		mov r30,r19
 206               	.LVL19:
 207 00b2 F0E0      		ldi r31,0
 208 00b4 E050      		subi r30,lo8(-(aes_sbox))
 209 00b6 F040      		sbci r31,hi8(-(aes_sbox))
 210               	/* #APP */
 211               	 ;  67 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 212 00b8 E491      		lpm r30, Z
 213               		
 214               	 ;  0 "" 2
 215               	.LVL20:
 216               	/* #NOAPP */
 217               	.LBE16:
 218 00ba 3E2F      		mov r19,r30
 219 00bc 00C0      		rjmp .L4
 220               	.LVL21:
 221               	.L3:
 222 00be 682F      		mov r22,r24
 223               	.LVL22:
 224 00c0 6C0D      		add r22,r12
 225               	.LVL23:
 226               	.LBB17:
 227               	.LBB18:
  38:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	((uint8_t*)a)[0] = ((uint8_t*)a)[1];
 228               		.loc 1 38 0
 229 00c2 702F      		mov r23,r16
 230               	.LVL24:
  41:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	((uint8_t*)a)[3] = t;
 231               		.loc 1 41 0
 232 00c4 A32E      		mov r10,r19
 233               	.LVL25:
 234               	.LBE18:
 235               	.LBE17:
 236               	.LBB19:
  68:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			}
  69:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		} else {
  70:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			next_nk += nk;
  71:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			aes_rotword(&(tmp.v32));
  72:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			tmp.v8[0] = pgm_read_byte(aes_sbox+tmp.v8[0]);
 237               		.loc 1 72 0
 238 00c6 E12F      		mov r30,r17
 239 00c8 F0E0      		ldi r31,0
 240 00ca E050      		subi r30,lo8(-(aes_sbox))
 241 00cc F040      		sbci r31,hi8(-(aes_sbox))
 242               	/* #APP */
 243               	 ;  72 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 244 00ce B490      		lpm r11, Z
 245               		
 246               	 ;  0 "" 2
 247               	.LVL26:
 248               	/* #NOAPP */
 249               	.LBE19:
 250               	.LBB20:
  73:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			tmp.v8[1] = pgm_read_byte(aes_sbox+tmp.v8[1]);
 251               		.loc 1 73 0
 252 00d0 E22F      		mov r30,r18
 253 00d2 F0E0      		ldi r31,0
 254 00d4 E050      		subi r30,lo8(-(aes_sbox))
 255 00d6 F040      		sbci r31,hi8(-(aes_sbox))
 256               	/* #APP */
 257               	 ;  73 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 258 00d8 E491      		lpm r30, Z
 259               		
 260               	 ;  0 "" 2
 261               	.LVL27:
 262               	/* #NOAPP */
 263               	.LBE20:
 264 00da 1E2F      		mov r17,r30
 265               	.LVL28:
 266               	.LBB21:
  74:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			tmp.v8[2] = pgm_read_byte(aes_sbox+tmp.v8[2]);
 267               		.loc 1 74 0
 268 00dc EA2D      		mov r30,r10
 269               	.LVL29:
 270 00de F0E0      		ldi r31,0
 271 00e0 E050      		subi r30,lo8(-(aes_sbox))
 272 00e2 F040      		sbci r31,hi8(-(aes_sbox))
 273               	/* #APP */
 274               	 ;  74 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 275 00e4 E491      		lpm r30, Z
 276               		
 277               	 ;  0 "" 2
 278               	.LVL30:
 279               	/* #NOAPP */
 280               	.LBE21:
 281 00e6 2E2F      		mov r18,r30
 282               	.LVL31:
 283               	.LBB22:
  75:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			tmp.v8[3] = pgm_read_byte(aes_sbox+tmp.v8[3]);
 284               		.loc 1 75 0
 285 00e8 E72F      		mov r30,r23
 286               	.LVL32:
 287 00ea F0E0      		ldi r31,0
 288 00ec E050      		subi r30,lo8(-(aes_sbox))
 289 00ee F040      		sbci r31,hi8(-(aes_sbox))
 290               	/* #APP */
 291               	 ;  75 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 292 00f0 E491      		lpm r30, Z
 293               		
 294               	 ;  0 "" 2
 295               	.LVL33:
 296               	/* #NOAPP */
 297               	.LBE22:
 298 00f2 3E2F      		mov r19,r30
 299               	.LVL34:
 300               	.LBB23:
  76:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			tmp.v8[0] ^= pgm_read_byte(rc_tab+rc);
 301               		.loc 1 76 0
 302 00f4 E92F      		mov r30,r25
 303               	.LVL35:
 304 00f6 F0E0      		ldi r31,0
 305 00f8 E050      		subi r30,lo8(-(rc_tab))
 306 00fa F040      		sbci r31,hi8(-(rc_tab))
 307               	/* #APP */
 308               	 ;  76 ".././crypto/avrcryptolib//aes/aes_keyschedule.c" 1
 309 00fc E491      		lpm r30, Z
 310               		
 311               	 ;  0 "" 2
 312               	.LVL36:
 313               	/* #NOAPP */
 314               	.LBE23:
 315 00fe 0E2F      		mov r16,r30
 316               	.LVL37:
 317 0100 0B25      		eor r16,r11
  77:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 			rc++;
 318               		.loc 1 77 0
 319 0102 9F5F      		subi r25,lo8(-(1))
 320               	.LVL38:
 321               	.L4:
  78:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		}
  79:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		((uint32_t*)(ctx->key[0].ks))[i] = ((uint32_t*)(ctx->key[0].ks))[i-nk]
 322               		.loc 1 79 0 discriminator 2
 323 0104 FA01      		movw r30,r20
 324 0106 EE19      		sub r30,r14
 325 0108 FF09      		sbc r31,r15
 326 010a EE0F      		lsl r30
 327 010c FF1F      		rol r31
 328 010e EE0F      		lsl r30
 329 0110 FF1F      		rol r31
 330               	.LVL39:
 331 0112 EC0F      		add r30,r28
 332 0114 FD1F      		adc r31,r29
  80:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		                                   ^ tmp.v32;
 333               		.loc 1 80 0 discriminator 2
 334 0116 8080      		ld r8,Z
 335 0118 9180      		ldd r9,Z+1
 336 011a A280      		ldd r10,Z+2
 337 011c B380      		ldd r11,Z+3
 338 011e 0825      		eor r16,r8
 339 0120 1925      		eor r17,r9
 340 0122 2A25      		eor r18,r10
 341 0124 3B25      		eor r19,r11
 342               	.LVL40:
  79:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		                                   ^ tmp.v32;
 343               		.loc 1 79 0 discriminator 2
 344 0126 1496      		adiw r26,4
 345 0128 0D93      		st X+,r16
 346 012a 1D93      		st X+,r17
 347 012c 2D93      		st X+,r18
 348 012e 3C93      		st X,r19
 349 0130 1797      		sbiw r26,4+3
  60:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 		tmp.v32 = ((uint32_t*)(ctx->key[0].ks))[i-1];
 350               		.loc 1 60 0 discriminator 2
 351 0132 8F5F      		subi r24,lo8(-(1))
 352               	.LVL41:
 353 0134 00C0      		rjmp .L2
 354               	.L7:
 355               	/* epilogue start */
  81:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	}
  82:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** }
 356               		.loc 1 82 0
 357 0136 DF91      		pop r29
 358 0138 CF91      		pop r28
 359               	.LVL42:
 360 013a 1F91      		pop r17
 361 013c 0F91      		pop r16
 362 013e FF90      		pop r15
 363 0140 EF90      		pop r14
 364 0142 DF90      		pop r13
 365               	.LVL43:
 366 0144 CF90      		pop r12
 367 0146 BF90      		pop r11
 368 0148 AF90      		pop r10
 369 014a 9F90      		pop r9
 370 014c 8F90      		pop r8
 371 014e 0895      		ret
 372               		.cfi_endproc
 373               	.LFE2:
 375               	.global	aes128_init
 377               	aes128_init:
 378               	.LFB3:
  83:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  84:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** void aes128_init(const void* key, aes128_ctx_t* ctx){
 379               		.loc 1 84 0
 380               		.cfi_startproc
 381               	.LVL44:
 382               	/* prologue: function */
 383               	/* frame size = 0 */
 384               	/* stack size = 0 */
 385               	.L__stack_usage = 0
 386 0150 AB01      		movw r20,r22
  85:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	aes_init(key, 128, (aes_genctx_t*)ctx);
 387               		.loc 1 85 0
 388 0152 60E8      		ldi r22,lo8(-128)
 389 0154 70E0      		ldi r23,0
 390               	.LVL45:
 391 0156 0C94 0000 		jmp aes_init
 392               	.LVL46:
 393               		.cfi_endproc
 394               	.LFE3:
 396               	.global	aes192_init
 398               	aes192_init:
 399               	.LFB4:
  86:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** }
  87:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  88:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** void aes192_init(const void* key, aes192_ctx_t* ctx){
 400               		.loc 1 88 0
 401               		.cfi_startproc
 402               	.LVL47:
 403               	/* prologue: function */
 404               	/* frame size = 0 */
 405               	/* stack size = 0 */
 406               	.L__stack_usage = 0
 407 015a AB01      		movw r20,r22
  89:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	aes_init(key, 192, (aes_genctx_t*)ctx);
 408               		.loc 1 89 0
 409 015c 60EC      		ldi r22,lo8(-64)
 410 015e 70E0      		ldi r23,0
 411               	.LVL48:
 412 0160 0C94 0000 		jmp aes_init
 413               	.LVL49:
 414               		.cfi_endproc
 415               	.LFE4:
 417               	.global	aes256_init
 419               	aes256_init:
 420               	.LFB5:
  90:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** }
  91:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 
  92:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** void aes256_init(const void* key, aes256_ctx_t* ctx){
 421               		.loc 1 92 0
 422               		.cfi_startproc
 423               	.LVL50:
 424               	/* prologue: function */
 425               	/* frame size = 0 */
 426               	/* stack size = 0 */
 427               	.L__stack_usage = 0
 428 0164 AB01      		movw r20,r22
  93:.././crypto/avrcryptolib//aes/aes_keyschedule.c **** 	aes_init(key, 256, (aes_genctx_t*)ctx);
 429               		.loc 1 93 0
 430 0166 60E0      		ldi r22,0
 431 0168 71E0      		ldi r23,lo8(1)
 432               	.LVL51:
 433 016a 0C94 0000 		jmp aes_init
 434               	.LVL52:
 435               		.cfi_endproc
 436               	.LFE5:
 438               	.global	rc_tab
 439               		.section	.progmem.data,"a",@progbits
 442               	rc_tab:
 443 0000 01        		.byte	1
 444 0001 02        		.byte	2
 445 0002 04        		.byte	4
 446 0003 08        		.byte	8
 447 0004 10        		.byte	16
 448 0005 20        		.byte	32
 449 0006 40        		.byte	64
 450 0007 80        		.byte	-128
 451 0008 1B        		.byte	27
 452 0009 36        		.byte	54
 453               		.text
 454               	.Letext0:
 455               		.file 2 "/usr/lib/avr/include/stdint.h"
 456               		.file 3 ".././crypto/avrcryptolib//aes/aes_types.h"
 457               		.file 4 ".././crypto/avrcryptolib//aes/aes_sbox.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 aes_keyschedule.c
     /tmp/ccBtaWen.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccBtaWen.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccBtaWen.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccBtaWen.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccBtaWen.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccBtaWen.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccBtaWen.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccBtaWen.s:14     .text:0000000000000000 aes_init
     /tmp/ccBtaWen.s:442    .progmem.data:0000000000000000 rc_tab
     /tmp/ccBtaWen.s:377    .text:0000000000000150 aes128_init
     /tmp/ccBtaWen.s:398    .text:000000000000015a aes192_init
     /tmp/ccBtaWen.s:419    .text:0000000000000164 aes256_init

UNDEFINED SYMBOLS
memcpy
aes_sbox
